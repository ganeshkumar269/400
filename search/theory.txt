erricto video: https://www.youtube.com/watch?v=GU7DpgHINWQ
Tip:
	Think binary search problems are prefix of false and suffix of true
Binary Search:
		while(l<r)
			int mid = l + (r-l)/2 //l+r -> might overflow
			if(arr[mid] == el) return mid;
			else if (arr[mid] > el) r = mid - 1;
			else l = mid + 1;	
		return -1
		0 1 2 3 4 5 6 7 8 9

lower bound: (find first value >= x) 
	ans = -1
	while(l < r)
			int mid = l + (r-l)/2 //l+r -> might overflow
			if (arr[mid] >= el)
				ans = mid
				r = mid - 1;
			else l = mid + 1;	
	return ans
	
	Fast Remember: x = 8, ..... 7 9 ... assume index of 7 - 7, 9 - 8 
													l->|	|<-r
													mid = 7, thus store 9s index as ans, i.e r values on each iteration

upper bound: find first value <= x
	ans = -1
	while(l < r)
			int mid = l + (r-l)/2 //l+r -> might overflow
			if (arr[mid] <= el)
				ans = mid
				l = mid + 1
			else 	
				r = mid - 1;
	return ans
	
	Fast Remember: x = 8, ..... 7 9 ... 
													l->|	|<-r
													mid = 7, thus store 7 as ans, i.e l values on each iteration


